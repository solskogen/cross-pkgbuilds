# Maintainer: Anatol Pomozov <anatol.pomozov@gmail.com>
# Maintainer: Eli Schwartz <eschwartz@archlinux.org>
# Contributor: Christer Solskogen <christer.solskogen@gmail.com>
# Build order: aarch64-binutils -> aarch64-linux-api-headers -> aarch64-gcc-bootstrap -> aarch64-glibc -> aarch64-gcc -> aarch64-glibc (again)

pkgname=$TARGET-gcc-bootstrap
pkgver=10.3.0
_islver=0.23
pkgrel=1
#_snapshot=8-20190111
pkgdesc='The GNU Compiler Collection - cross compiler for ARM64 target'
arch=('arm' 'armv6h' 'armv7h' 'aarch64' 'riscv64' 's390x' 'x86_64')
url='https://gcc.gnu.org/'
license=(GPL LGPL FDL)
depends=(libmpc zstd)
makedepends=($TARGET-binutils)
provides=($TARGET-gcc)
conflicts=($TARGET-gcc)
options=(!emptydirs !strip staticlibs)
source=(https://ftp.gnu.org/gnu/gcc/gcc-$pkgver/gcc-$pkgver.tar.xz{,.sig}
        #https://gcc.gnu.org/pub/gcc/snapshots/$_snapshot/gcc-$_snapshot.tar.xz
        http://isl.gforge.inria.fr/isl-$_islver.tar.bz2)
sha256sums=('64f404c1a650f27fc33da242e1f2df54952e3963a49e06e73f6940f3223ac344'
            'SKIP'
            'c58922c14ae7d0791a77932f377840890f19bc486b653fa64eba7f1026fb214d')
validpgpkeys=(33C235A34C46AA3FFB293709A328C3A2C3C45C06  # Jakub Jelinek <jakub@redhat.com>
              13975A70E63C361C73AE69EF6EEB81F8981C74C7) # Richard Guenther <richard.guenther@gmail.com>

if [ -n "$_snapshot" ]; then
  _basedir=gcc-$_snapshot
else
  _basedir=gcc-$pkgver
fi
case $TARGET in
	arm)    
		_target=armv5tel-unknown-linux-gnueabi
		CONFIGFLAGS="--with-arch=armv5te --with-float=soft";;
	armv6h)
		_target=armv6l-unknown-linux-gnueabihf
		CONFIGFLAGS="--with-arch=armv6 --with-float=hard --with-fpu=vfp";;
	armv7h)
		_target=armv7l-unknown-linux-gnueabihf
		CONFIGFLAGS="--with-arch=armv7-a --with-float=hard --with-fpu=vfpv3-d16";;
	aarch64)
		_target=aarch64-unknown-linux-gnu
		CONFIGFLAGS="--with-arch=armv8-a --enable-fix-cortex-a53-835769 --enable-fix-cortex-a53-843419";;
	riscv64)
		_target=riscv64-unknown-linux-gnu
		CONFIGFLAGS="";;
	s390x)
		_target=s390x-unknown-linux-gnu
		CONFIGFLAGS="--with-arch=z13";;
	"") echo "You must set \$TARGET to a supported target." && exit 1;;
	*) echo "$TARGET is not a supported target!" && exit 1;;
esac


prepare() {
  cd $_basedir

  # link isl for in-tree builds
  ln -sf ../isl-$_islver isl

  #hack - Having CPPFLAGS defined makes the build barf. Workaround it like this:
  _cppflags=$CPPFLAGS
  CFLAGS="$_cppflags $CFLAGS"
  CXXFLAGS="$_cppflags $CXXFLAGS"
  unset CPPFLAGS

  rm -rf "$srcdir"/gcc-build
  mkdir "$srcdir"/gcc-build
}

build() {
  cd gcc-build

  "$srcdir"/$_basedir/configure \
      --prefix=/usr \
      --with-sysroot=/usr/$_target/sys-root \
      --libexecdir=/usr/lib \
      --target=$_target \
      --disable-nls --enable-default-pie \
      --enable-languages=c,c++ \
      --with-system-zlib --with-isl --enable-__cxa_atexit \
      --enable-linker-build-id \
      --enable-plugin \
      --with-linker-hash-style=gnu --enable-gnu-indirect-function \
      --disable-multilib --disable-werror \
      --enable-checking=release --enable-host-shared \
		$CONFIGFLAGS \
      --disable-threads --without-headers --with-glibc-version=2.33 \
      --disable-shared --with-newlib

  make all-gcc all-target-libgcc
}

package() {
  cd gcc-build

  make install-strip-gcc install-strip-target-libgcc DESTDIR="$pkgdir"
  ln -s $_target-gcc "$pkgdir"/usr/bin/$_target-cc
  # Remove files that conflict with host gcc package
  rm -r "$pkgdir"/usr/{include,share}

  #workaround for fakeroot bug
  chown -R root:root "$pkgdir"/usr

}
