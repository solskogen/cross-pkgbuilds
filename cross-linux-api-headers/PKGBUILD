# Maintainer: Christer Solskogen <christer.solskogen@gmail.com>

pkgname=$TARGET-linux-api-headers
pkgver=5.10.15
pkgrel=1
pkgdesc="Kernel headers for $TARGET"
arch=(any)
url='https://www.kernel.org'
license=(GPL2)
makedepends=(rsync)
source=(https://www.kernel.org/pub/linux/kernel/v${pkgver:0:1}.x/linux-${pkgver}.tar.{xz,sign})
sha256sums=('d85287bcf1d51c4d0a32380ac0a5b2b487b321058a6923617f1613fbd10e6e01'
            'SKIP')
validpgpkeys=(
  'ABAF11C65A2970B130ABE3C479BE3E4300411886'  # Linus Torvalds
  '647F28654894E3BD457199BE38DBBDC86092693E'  # Greg Kroah-Hartman
)

case $TARGET in
	arm)_target=armv5tel-unknown-linux-gnueabi _kernel_arch=arm;;
	armv6h) _target=armv6l-unknown-linux-gnueabihf _kernel_arch=arm;;
	armv7h) _target=armv7l-unknown-linux-gnueabihf _kernel_arch=arm;;
	aarch64) _target=aarch64-unknown-linux-gnu _kernel_arch=arm64;;
	riscv64) _target=riscv64-unknown-linux-gnu _kernel_arch=riscv;;
	s390x)  _target=s390x-unknown-linux-gnu _kernel_arch=s390;;
	"") echo "You must set \$TARGET to a supported target." && exit 1;;
	*) echo "$TARGET is not a supported target!" && exit 1;;
esac

build() {
  cd linux-$pkgver

  make ARCH=$_kernel_arch mrproper
  make ARCH=$_kernel_arch headers_check
}

package() {
  cd linux-$pkgver

  make INSTALL_HDR_PATH="$pkgdir/usr/$_target/sys-root/usr" ARCH=$_kernel_arch V=0 headers_install

  # clean-up unnecessary files generated during install
  find "$pkgdir" \( -name .install -or -name ..install.cmd \) -delete
}
